@startuml 总体规划
class C as "实现功能"{
    ==基本功能==
    ~ 线性表动态移动
    # 线性表顺序存储
    + 线性表初始化
    - 线性表的销毁
    ~ 线性表的清空
    # 线性表的插入
    + 线性表的删除
    - 线性表的查找定位
    ~ 线性表的遍历输出
    ==地位描述==
    这个类,只是提供线性
    表相关算法动画逻辑,
    不具备通用性,一定情
    况下具备可拓展性(可
    被继承).比如某些线性
    表相关的具体问题,可以
    继承该类实现,但继承不
    代表其所有方法都可用.

    再强调一下,这个类,
    只是封装动画中算法
    逻辑,并不是动画生成
    器,不提供scene接口,
    仅供专门生成动画的类
    来访问.
}


class T as "想法"{
    ==个人想法==
    第一是只有SequentialListAlgorithm类,
    功能囊括所有.
    第二个是分段,先模拟抽象数据,用于存储
    SingleNode,然后再用算法类,对这些抽象
    数据结构进行操作.
    ==简述==
    方法一呢,目前已有眉目,但是也仅仅是对当前
    类SequentialListAlgorithm而言,对后续
    不具备算法的拓展性.
    方法二呢,还没有思考好,但是极具延展性,
    假如实现了,对后续算法动画生成很有帮助.
    ==打算==
    既然已经有了方法一做保底,那么也没必要太
    早的实现,站在长远的角度来看,应该强攻方法
    二,如果证实不行,再回头重写方法一也不晚.
}


@enduml